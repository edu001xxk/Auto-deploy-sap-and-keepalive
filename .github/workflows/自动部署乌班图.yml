name: Ëá™Âä®ÈÉ®ÁΩ≤UbuntuÂÆπÂô®Âà∞SAP

on:
  workflow_dispatch:
    inputs:
      region:
        description: 'ÈÄâÊã©ÈÉ®ÁΩ≤Âå∫Âüü'
        required: true
        default: 'US(free)'
        type: choice
        options:
          # ÂÖçË¥πÂå∫Âüü
          - SG(free)
          - US(free)
          # AWS Âå∫Âüü
          - AWS-AU(Sydney)
          - AWS-BR(S√£o Paulo)
          - AWS-KR(Seoul)
          - AWS-CA(Montreal)
          - AWS-US(VA)
          - AWS-US(OR)
          - AWS-EU(Frankfurt)
          - AWS-JP(Tokyo)
          - AWS-SG(Singapore)
          # GCP Âå∫Âüü
          - GCP-AU(Sydney)
          - GCP-BR(S√£o Paulo)
          - GCP-US(IA)
          - GCP-EU(Frankfurt)
          - GCP-JP(Osaka)
          - GCP-JP(Tokyo)
          - GCP-IL(Tel Aviv)
          - GCP-IN(Mumbai)
          - GCP-KSA(Dammam)
          # Azure Âå∫Âüü
          - Azure-AU(Sydney)
          - Azure-BR(S√£o Paulo)
          - Azure-CA(Montreal)
          - Azure-US(VA)
          - Azure-US(WA)
          - Azure-EU(Netherlands)
          - Azure-JP(Tokyo)
          - Azure-SG(Singapore)
          # SAP Neo Âå∫Âüü
          - Neo-UAE(Dubai)
          - Neo-KSA(Riyadh)
      app_name:
        description: 'Â∫îÁî®ÂêçÁß∞ÔºàÂèØÈÄâÔºåÁïôÁ©∫ÂàôËá™Âä®ÁîüÊàêÔºâ'
        required: false
        default: ''

env:
  DOCKER_IMAGE: ghcr.io/vevc/ubuntu:25.7.14
  MEMORY: ${{ secrets.MEMORY || '1024M' }}
  DISK: ${{ secrets.DISK || '2048M' }}

jobs:
  deploy-app:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install CF CLI
      run: |
        wget -q -O - https://packages.cloudfoundry.org/debian/cli.cloudfoundry.org.key | sudo apt-key add -
        echo "deb https://packages.cloudfoundry.org/debian stable main" | sudo tee /etc/apt/sources.list.d/cloudfoundry-cli.list
        sudo apt-get update
        sudo apt-get install -y cf8-cli

    - name: Determine CF API endpoint and app name
      run: |
        RANDOM_STR=$(head /dev/urandom | tr -dc 'a-z' | head -c 6)

        case "${{ github.event.inputs.region }}" in
          # ÂÖçË¥πÂå∫Âüü
          "SG(free)")
            echo "CF_API=https://api.cf.ap21.hana.ondemand.com" >> $GITHUB_ENV
            echo "APP_NAME=ubuntu-freesg$RANDOM_STR" >> $GITHUB_ENV
            ;;
          "US(free)")
            echo "CF_API=https://api.cf.us10-001.hana.ondemand.com" >> $GITHUB_ENV
            echo "APP_NAME=ubuntu-freeus$RANDOM_STR" >> $GITHUB_ENV
            ;;
          # AWS Âå∫Âüü
          "AWS-AU(Sydney)")
            echo "CF_API=https://api.cf.ap10.hana.ondemand.com" >> $GITHUB_ENV
            echo "APP_NAME=ubuntu-awsau$RANDOM_STR" >> $GITHUB_ENV
            ;;
          "AWS-BR(S√£o Paulo)")
            echo "CF_API=https://api.cf.br10.hana.ondemand.com" >> $GITHUB_ENV
            echo "APP_NAME=ubuntu-awsbr$RANDOM_STR" >> $GITHUB_ENV
            ;;
          "AWS-KR(Seoul)")
            echo "CF_API=https://api.cf.ap12.hana.ondemand.com" >> $GITHUB_ENV
            echo "APP_NAME=ubuntu-awskr$RANDOM_STR" >> $GITHUB_ENV
            ;;
          "AWS-CA(Montreal)")
            echo "CF_API=https://api.cf.ca10.hana.ondemand.com" >> $GITHUB_ENV
            echo "APP_NAME=ubuntu-awsca$RANDOM_STR" >> $GITHUB_ENV
            ;;
          "AWS-US(VA)")
            echo "CF_API=https://api.cf.us10-001.hana.ondemand.com" >> $GITHUB_ENV
            echo "APP_NAME=ubuntu-awsusva$RANDOM_STR" >> $GITHUB_ENV
            ;;
          "AWS-US(OR)")
            echo "CF_API=https://api.cf.us11.hana.ondemand.com" >> $GITHUB_ENV
            echo "APP_NAME=ubuntu-awsusor$RANDOM_STR" >> $GITHUB_ENV
            ;;
          "AWS-EU(Frankfurt)")
            echo "CF_API=https://api.cf.eu10-005.hana.ondemand.com" >> $GITHUB_ENV
            echo "APP_NAME=ubuntu-awseu$RANDOM_STR" >> $GITHUB_ENV
            ;;
          "AWS-JP(Tokyo)")
            echo "CF_API=https://api.cf.jp10.hana.ondemand.com" >> $GITHUB_ENV
            echo "APP_NAME=ubuntu-awsjp$RANDOM_STR" >> $GITHUB_ENV
            ;;
          "AWS-SG(Singapore)")
            echo "CF_API=https://api.cf.ap11.hana.ondemand.com" >> $GITHUB_ENV
            echo "APP_NAME=ubuntu-awssg$RANDOM_STR" >> $GITHUB_ENV
            ;;
          # GCP Âå∫Âüü
          "GCP-AU(Sydney)")
            echo "CF_API=https://api.cf.ap30.hana.ondemand.com" >> $GITHUB_ENV
            echo "APP_NAME=ubuntu-gcpau$RANDOM_STR" >> $GITHUB_ENV
            ;;
          "GCP-BR(S√£o Paulo)")
            echo "CF_API=https://api.cf.br30.hana.ondemand.com" >> $GITHUB_ENV
            echo "APP_NAME=ubuntu-gcpbr$RANDOM_STR" >> $GITHUB_ENV
            ;;
          "GCP-US(IA)")
            echo "CF_API=https://api.cf.us30.hana.ondemand.com" >> $GITHUB_ENV
            echo "APP_NAME=ubuntu-gcpus$RANDOM_STR" >> $GITHUB_ENV
            ;;
          "GCP-EU(Frankfurt)")
            echo "CF_API=https://api.cf.eu30.hana.ondemand.com" >> $GITHUB_ENV
            echo "APP_NAME=ubuntu-gcpeu$RANDOM_STR" >> $GITHUB_ENV
            ;;
          "GCP-JP(Osaka)")
            echo "CF_API=https://api.cf.jp30.hana.ondemand.com" >> $GITHUB_ENV
            echo "APP_NAME=ubuntu-gcpjpo$RANDOM_STR" >> $GITHUB_ENV
            ;;
          "GCP-JP(Tokyo)")
            echo "CF_API=https://api.cf.jp31.hana.ondemand.com" >> $GITHUB_ENV
            echo "APP_NAME=ubuntu-gcpjpt$RANDOM_STR" >> $GITHUB_ENV
            ;;
          "GCP-IL(Tel Aviv)")
            echo "CF_API=https://api.cf.il30.hana.ondemand.com" >> $GITHUB_ENV
            echo "APP_NAME=ubuntu-gcpil$RANDOM_STR" >> $GITHUB_ENV
            ;;
          "GCP-IN(Mumbai)")
            echo "CF_API=https://api.cf.in30.hana.ondemand.com" >> $GITHUB_ENV
            echo "APP_NAME=ubuntu-gcpin$RANDOM_STR" >> $GITHUB_ENV
            ;;
          "GCP-KSA(Dammam)")
            echo "CF_API=https://api.cf.sa31.hana.ondemand.com" >> $GITHUB_ENV
            echo "APP_NAME=ubuntu-gcpsa$RANDOM_STR" >> $GITHUB_ENV
            ;;
          # Azure Âå∫Âüü
          "Azure-AU(Sydney)")
            echo "CF_API=https://api.cf.ap20.hana.ondemand.com" >> $GITHUB_ENV
            echo "APP_NAME=ubuntu-azau$RANDOM_STR" >> $GITHUB_ENV
            ;;
          "Azure-BR(S√£o Paulo)")
            echo "CF_API=https://api.cf.br20.hana.ondemand.com" >> $GITHUB_ENV
            echo "APP_NAME=ubuntu-azbr$RANDOM_STR" >> $GITHUB_ENV
            ;;
          "Azure-CA(Montreal)")
            echo "CF_API=https://api.cf.ca20.hana.ondemand.com" >> $GITHUB_ENV
            echo "APP_NAME=ubuntu-azca$RANDOM_STR" >> $GITHUB_ENV
            ;;
          "Azure-US(VA)")
            echo "CF_API=https://api.cf.us21.hana.ondemand.com" >> $GITHUB_ENV
            echo "APP_NAME=ubuntu-azva$RANDOM_STR" >> $GITHUB_ENV
            ;;
          "Azure-US(WA)")
            echo "CF_API=https://api.cf.us20.hana.ondemand.com" >> $GITHUB_ENV
            echo "APP_NAME=ubuntu-azwa$RANDOM_STR" >> $GITHUB_ENV
            ;;
          "Azure-EU(Netherlands)")
            echo "CF_API=https://api.cf.eu20-001.hana.ondemand.com" >> $GITHUB_ENV
            echo "APP_NAME=ubuntu-azeu$RANDOM_STR" >> $GITHUB_ENV
            ;;
          "Azure-JP(Tokyo)")
            echo "CF_API=https://api.cf.jp20.hana.ondemand.com" >> $GITHUB_ENV
            echo "APP_NAME=ubuntu-azjp$RANDOM_STR" >> $GITHUB_ENV
            ;;
          "Azure-SG(Singapore)")
            echo "CF_API=https://api.cf.ap21.hana.ondemand.com" >> $GITHUB_ENV
            echo "APP_NAME=ubuntu-azsg$RANDOM_STR" >> $GITHUB_ENV
            ;;
          # SAP Neo Âå∫Âüü
          "Neo-UAE(Dubai)")
            echo "CF_API=https://api.cf.neo-ae1.hana.ondemand.com" >> $GITHUB_ENV
            echo "APP_NAME=ubuntu-neouae$RANDOM_STR" >> $GITHUB_ENV
            ;;
          "Neo-KSA(Riyadh)")
            echo "CF_API=https://api.cf.neo-sa1.hana.ondemand.com" >> $GITHUB_ENV
            echo "APP_NAME=ubuntu-neoksa$RANDOM_STR" >> $GITHUB_ENV
            ;;
        esac

        if [ -n "${{ github.event.inputs.app_name }}" ]; then
          echo "APP_NAME=${{ github.event.inputs.app_name }}" >> $GITHUB_ENV
        fi

        echo "‰ΩøÁî®APIÁ´ØÁÇπ: $CF_API"
        echo "Â∫îÁî®ÂêçÁß∞: $APP_NAME"
        echo "ÈïúÂÉè: ${{ env.DOCKER_IMAGE }}"

    - name: Login to Cloud Foundry
      run: |
        cf login -a ${{ env.CF_API }} -u "${{ secrets.EMAIL }}" -p "${{ secrets.PASSWORD }}"

        ORG=$(cf orgs | sed -n '4p')
        echo "ORG=$ORG" >> $GITHUB_ENV

        SPACE=$(cf spaces | sed -n '4p')
        echo "SPACE=$SPACE" >> $GITHUB_ENV

        cf login -a ${{ env.CF_API }} -u "${{ secrets.EMAIL }}" -p "${{ secrets.PASSWORD }}" -o "$ORG" -s "$SPACE"

    - name: Deploy Ubuntu container
      run: |
        if cf push ${{ env.APP_NAME }} --docker-image ${{ env.DOCKER_IMAGE }} -m ${{ env.MEMORY }} -k ${{ env.DISK }} --health-check-type port; then
          echo "Deployment successful"
        else
          cf delete ${{ env.APP_NAME }} -f
          echo "üí• ÈÉ®ÁΩ≤Â§±Ë¥•ÔºåËØ∑Á®çÂêéÂÜçËØï"
          exit 1
        fi

    - name: Set environment variables and restart app
      run: |
        cf set-env ${{ env.APP_NAME }} SSH_USER "xiatian"
        cf set-env ${{ env.APP_NAME }} SSH_PASSWORD "${{ secrets.SSH_PASSWORD }}"
        cf set-env ${{ env.APP_NAME }} DISK_PATH "/xiatian"

        if [ -f .env ]; then
          while IFS= read -r line; do
            if [[ ! "$line" =~ ^# ]] && [[ -n "$line" ]]; then
              IFS='=' read -r key value <<< "$line"
              cf set-env ${{ env.APP_NAME }} "$key" "$value"
            fi
          done < .env
        fi

        sleep 3
        cf restage ${{ env.APP_NAME }}

    - name: Verify deployment
      run: |
        STATUS=$(cf app ${{ env.APP_NAME }} | grep "requested state:" | awk '{print $3}')
        if [ "$STATUS" = "started" ]; then
          echo "‚úÖ Ubuntu ÂÆπÂô®ÂêØÂä®ÊàêÂäü"
        else
          echo "‚ùå Â∫îÁî®ÂêØÂä®Â§±Ë¥•ÔºåÁä∂ÊÄÅ: $STATUS"
          cf logs ${{ env.APP_NAME }} --recent
          exit 1
        fi

    - name: ËØ¶ÁªÜÈÉ®ÁΩ≤‰ø°ÊÅØ
      run: |
        echo "üöÄ ÈÉ®ÁΩ≤ÂÆåÊàê"
        echo "Âå∫Âüü: ${{ github.event.inputs.region }}"
        echo "ÁªÑÁªá: ${{ env.ORG }}"
        echo "Á©∫Èó¥: ${{ env.SPACE }}"
        echo "Â∫îÁî®ÂêçÁß∞: ${{ env.APP_NAME }}"

        ROUTE=$(cf app ${{ env.APP_NAME }} | grep "routes:" | awk '{print $2}')
        if [ -n "$ROUTE" ]; then
          echo "üåê SSH Âú∞ÂùÄ: $ROUTE:22"
          echo "üë§ Áî®Êà∑: xiatian"
          echo "üîë ÂØÜÁ†Å: ‰ΩøÁî® secrets.SSH_PASSWORD"
          echo "üíæ Á°¨ÁõòË∑ØÂæÑ: /xiatian"
        else
          echo "‚ö†Ô∏è Êú™ÊâæÂà∞Ë∑ØÁî±"
        fi
